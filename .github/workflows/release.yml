name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: windows-latest

    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Extract Version
        shell: pwsh
        run: |
          $VERSION = $env:GITHUB_REF -replace '^refs/tags/v',''
          echo "Extracted version: $VERSION"
          echo "ARTIFACT_VERSION=$VERSION" >> $env:GITHUB_ENV

      - name: Build Project
        run: |
          cargo build --release --bin pubg_controller
        env:
          CARGO_TERM_COLOR: always

      - name: Archive Build Artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts
          Copy-Item target/release/pubg_controller.exe artifacts/

      - name: Generate Release Notes
        id: release_notes
        shell: pwsh
        run: |
          # Fetch full history and tags
          git fetch --unshallow
          git fetch --tags
          
          # Get the current tag from the GitHub ref
          $currentTag = $env:GITHUB_REF -replace '^refs/tags/',''
          
          # Get the previous tag
          $lastTag = $(git describe --tags --abbrev=0 "$currentTag^")
          
          # Capture full commit messages
          $commitMessages = $(git log "$lastTag..$currentTag" --pretty=format:"### %h - %s%n%n%b" --no-merges)
          
          # Join commit messages with newline to ensure all are captured
          $formattedCommitMessages = $commitMessages -join "`n`n"
          
          # Prepare additional sections
          $featuresSection = "`n`n## üõ†Ô∏è  Features`n- Distance from players`n- Players health`n- Angle to players`n`n## üîß Setup Requirements`n- Premium Zenith driver (available at https://valth.run/)`n- Windows OS"
          
          $releaseNotes = "Automated release message`n`n## Changes since $lastTag`n`n$formattedCommitMessages$featuresSection"
          $releaseNotes = $releaseNotes -replace "'", "''"
          
          echo "RELEASE_NOTES<<EOF" >> $env:GITHUB_ENV
          echo "$releaseNotes" >> $env:GITHUB_ENV
          echo "EOF" >> $env:GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "v${{ env.ARTIFACT_VERSION }}"
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/pubg_controller.exe
          asset_name: "pubg_controller_${{ env.ARTIFACT_VERSION }}.exe"
          asset_content_type: application/octet-stream
